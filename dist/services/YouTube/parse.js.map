{"version":3,"file":"parse.js","sourceRoot":"","sources":["../../../src/services/YouTube/parse.ts"],"names":[],"mappings":";;;AAAA,SAAgB,qBAAqB,CAAE,IAAS;IAC/C,IAAI,CAAC,IAAI;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;IACzC,IAAI,CAAC,OAAO;QAAE,OAAO,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;SAC/C,IAAI,CAAC,OAAO,CAAC,IAAI;QAAE,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;IAC/C,MAAM,QAAQ,GAAG,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;IACxE,OAAO,CAAC,oBAAoB,KAAK,KAAK,CAAC;IAEvC,MAAM,IAAI,GAAG,IAAI;SACZ,KAAK,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SACvB,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACnC,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,MAAM,OAAO,GACT,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,eAAe,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAClG,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,mBAAmB,EAAE,QAAQ,CAC9C,CAAC;IACN,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC1B,IAAI,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,KAAK;YAAE,MAAM;QACxD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,aAAa,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAAE,SAAS;QACxG,QAAQ,OAAO,CAAC,IAAI,EAAE;YAClB,KAAK,OAAO,CAAC,CAAC;gBACV,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;gBAClC,IAAI,MAAM,EAAE;oBACR,IAAI,OAAO,CAAC,oBAAoB;wBAAE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;oBAC7E,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxB;gBACD,MAAM;aACT;YACD,KAAK,SAAS,CAAC,CAAC;gBACZ,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,MAAM;oBAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACjC,MAAM;aACT;YACD,KAAK,UAAU,CAAC,CAAC;gBACb,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;gBACrC,IAAI,MAAM,EAAE;oBACR,IAAI,OAAO,CAAC,oBAAoB,IAAI,MAAM,CAAC,SAAS;wBAAE,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBACxF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxB;gBACD,MAAM;aACT;YACD;gBACI,MAAM,IAAI,KAAK,CAAC,wBAAwB,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;SAC/D;KACJ;IACD,OAAO,OAAO,CAAC;AACnB,CAAC;AA/CD,sDA+CC;AAED,SAAgB,wBAAwB,CAAC,IAAS;AAElD,CAAC;AAFD,4DAEC","sourcesContent":["export function MusicTrackFromYouTube (data: any){\r\n\tif (!data) throw new Error(\"No data given\");\r\n    if (!options) options = { type: 'video', limit: 0 };\r\n    else if (!options.type) options.type = 'video';\r\n    const hasLimit = typeof options.limit === 'number' && options.limit > 0;\r\n    options.unblurNSFWThumbnails ??= false;\r\n\r\n    const data = html\r\n        .split('var ytInitialData = ')?.[1]\r\n        ?.split(';</script>')[0]\r\n        .split(/;\\s*(var|const|let)\\s/)[0];\r\n    const json_data = JSON.parse(data);\r\n    const results = [];\r\n    const details =\r\n        json_data.contents.twoColumnSearchResultsRenderer.primaryContents.sectionListRenderer.contents.flatMap(\r\n            (s: any) => s.itemSectionRenderer?.contents\r\n        );\r\n    for (const detail of details) {\r\n        if (hasLimit && results.length === options.limit) break;\r\n        if (!detail || (!detail.videoRenderer && !detail.channelRenderer && !detail.playlistRenderer)) continue;\r\n        switch (options.type) {\r\n            case 'video': {\r\n                const parsed = parseVideo(detail);\r\n                if (parsed) {\r\n                    if (options.unblurNSFWThumbnails) parsed.thumbnails.forEach(unblurThumbnail);\r\n                    results.push(parsed);\r\n                }\r\n                break;\r\n            }\r\n            case 'channel': {\r\n                const parsed = parseChannel(detail);\r\n                if (parsed) results.push(parsed);\r\n                break;\r\n            }\r\n            case 'playlist': {\r\n                const parsed = parsePlaylist(detail);\r\n                if (parsed) {\r\n                    if (options.unblurNSFWThumbnails && parsed.thumbnail) unblurThumbnail(parsed.thumbnail);\r\n                    results.push(parsed);\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                throw new Error(`Unknown search type: ${options.type}`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\n\r\nexport function MusicPlaylistFromYouTube(data: any){\r\n\t\r\n}"]}