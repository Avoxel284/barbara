{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/services/Spotify/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Avoxel284 2022\n * Barbara Music Module / Spotify\n */\n\nimport { BarbaraType, MusicPlaylist, MusicTrack, Service } from \"../../lib\";\nimport axios from \"axios\";\nimport { MusicTrackFromSpotify, MusicPlaylistFromSpotify } from \"./parse\";\nimport { getKey, setKey } from \"../../lib/config\";\n\n/** URL pattern for Spotify - ripped from play-dl */\nexport const SPOTIFY_URL_PATTERN = /^((https:)?\\/\\/)?open.spotify.com\\/(track|album|playlist)\\//;\n\n/**\n * Returns {@link MusicTrack} or {@link MusicPlaylist} with data from Spotify from a given resource URL\n */\nexport async function Spotify(url: string): Promise<MusicTrack | MusicPlaylist> {\n\turl = url.trim();\n\tif (!url.match(SPOTIFY_URL_PATTERN)) throw new Error(`Given URL is not a valid Spotify URL`);\n\n\tif (url.includes(\"track/\")) {\n\t\tconst trackId = url.split(\"track/\")[1].split(\"&\")[0].split(\"?\")[0];\n\t\tconst { data } = await axios\n\t\t\t.get(`https://api.spotify.com/v1/tracks/${trackId}?market=${getKey(\"SPOTIFY_MARKETCODE\")}`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `${getKey(\"SPOTIFY_TOKENTYPE\")} ${getKey(\"SPOTIFY_ACCESSTOKEN\")}`,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\treturn MusicTrackFromSpotify(data);\n\t}\n\n\tif (url.includes(\"playlist/\")) {\n\t\tconst playlistId = url.split(\"playlist/\")[1].split(\"&\")[0].split(\"?\")[0];\n\t\tconst { data } = await axios\n\t\t\t.get(\n\t\t\t\t`https://api.spotify.com/v1/playlists/${playlistId}?market=${getKey(\"SPOTIFY_MARKETCODE\")}`,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `${getKey(\"SPOTIFY_TOKENTYPE\")} ${getKey(\"SPOTIFY_ACCESSTOKEN\")}`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\treturn MusicPlaylistFromSpotify(data);\n\t}\n\n\tif (url.includes(\"album/\")) {\n\t\tconst albumID = url.split(\"album/\")[1].split(\"&\")[0].split(\"?\")[0];\n\t\tconst { data } = await axios\n\t\t\t.get(`https://api.spotify.com/v1/albums/${albumID}?market=${getKey(\"SPOTIFY_MARKETCODE\")}`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `${getKey(\"SPOTIFY_TOKENTYPE\")} ${getKey(\"SPOTIFY_ACCESSTOKEN\")}`,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\treturn MusicPlaylistFromSpotify(data, true);\n\t}\n\n\tthrow new Error(\"Spotify returned unknown resource.\");\n}\n\n/**\n * Searches for a Spotify track or playlist and returns with an array of {@link MusicTrack} or {@link MusicPlaylist}\n */\nexport async function SpotifySearch(\n\tquery: string,\n\tlimit: number = 5,\n\ttype: \"track\" | \"playlist\" | \"album\" = \"track\"\n) {\n\tif (!query) throw new Error(\"No query given!\");\n\tif (limit > 50 || limit < 0) throw \"Limit is out of range for Spotify (0 - 50)\";\n\n\tconst { data } = await axios\n\t\t.get(\n\t\t\t`https://api.spotify.com/v1/search?type=${type}&q=${query}&limit=${limit}&market=${getKey(\n\t\t\t\t\"SPOTIFY_MARKETCODE\"\n\t\t\t)}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `${getKey(\"SPOTIFY_TOKENTYPE\")} ${getKey(\"SPOTIFY_ACCESSTOKEN\")}`,\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t\t.catch((err) => {\n\t\t\tthrow err;\n\t\t});\n\n\tif (type === \"track\") {\n\t\treturn data.tracks.items.map((d: any) => MusicTrackFromSpotify(d));\n\t}\n\n\tif (type === \"playlist\") {\n\t\treturn data.tracks.items.map((d: any) => MusicPlaylistFromSpotify(d));\n\t}\n\n\tif (type === \"album\") {\n\t\treturn data.tracks.items.map((d: any) => MusicPlaylistFromSpotify(d, true));\n\t}\n\n\tthrow new Error(\"Spotify returned unknown resource.\");\n}\n"]}