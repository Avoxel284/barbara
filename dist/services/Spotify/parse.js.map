{"version":3,"file":"parse.js","sourceRoot":"","sources":["../../../src/services/Spotify/parse.ts"],"names":[],"mappings":";;;AAKA,mCAA+D;AAG/D,SAAgB,qBAAqB,CAAC,IAAS;IAC9C,OAAO,IAAI,gBAAU,CAAC;QACrB,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;QAC/B,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI;QACzC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE;YACxC,OAAO;gBACN,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,OAAO;gBACjC,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,EAAE,EAAE,MAAM,CAAC,EAAE;aACb,CAAC;QACH,CAAC,CAAC;QACF,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QACnC,OAAO,EAAE,aAAO,CAAC,OAAO;QACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI;KAClB,CAAC,CAAC;AACJ,CAAC;AAlBD,sDAkBC;AAED,SAAgB,wBAAwB,CAAC,IAAS,EAAE,UAAmB,KAAK;IAC3E,OAAO,IAAI,mBAAa,CAAC;QACxB,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;QAC/B,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI;QACzC,MAAM,EAAE;YACP,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO;YACrC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY;YAC7B,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;SACjB;QACD,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAC5B,OAAO,EAAE,aAAO,CAAC,OAAO;QACxB,OAAO,EAAE,OAAO;QAGhB,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE;YACnC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QACF,YAAY,EAAE,IAAI;KAClB,CAAC,CAAC;AACJ,CAAC;AArBD,4DAqBC","sourcesContent":["/**\n * Avoxel284 2022\n * Barbara Music Module / Spotify\n */\n\nimport { MusicPlaylist, MusicTrack, Service } from \"../../lib\";\nimport { getKey } from \"../../lib/config\";\n\nexport function MusicTrackFromSpotify(data: any) {\n\treturn new MusicTrack({\n\t\tname: data.name,\n\t\turl: data.external_urls.spotify,\n\t\tid: data.id,\n\t\tduration: Number(data.duration_ms) / 1000,\n\t\tauthor: data.artists.map((artist: any) => {\n\t\t\treturn {\n\t\t\t\turl: artist.external_urls.spotify,\n\t\t\t\tname: artist.name,\n\t\t\t\tid: artist.id,\n\t\t\t};\n\t\t}),\n\t\tthumbnail: data?.album?.images?.[0],\n\t\tservice: Service.spotify,\n\t\texplicit: data.explicit,\n\t\toriginalData: data,\n\t});\n}\n\nexport function MusicPlaylistFromSpotify(data: any, isAlbum: boolean = false) {\n\treturn new MusicPlaylist({\n\t\tname: data.name,\n\t\turl: data.external_urls.spotify,\n\t\tid: data.id,\n\t\tduration: Number(data.duration_ms) / 1000,\n\t\tauthor: {\n\t\t\turl: data.owner.external_urls.spotify,\n\t\t\tname: data.owner.display_name,\n\t\t\tid: data.owner.id,\n\t\t},\n\t\tthumbnail: data?.images?.[0],\n\t\tservice: Service.spotify,\n\t\tisAlbum: isAlbum,\n\t\t// TODO: possibly convert to map?\n\t\t// TODO: tracks in playlist- check api\n\t\ttracks: data?.tracks.map((d: any) => {\n\t\t\tMusicTrackFromSpotify(d);\n\t\t}),\n\t\toriginalData: data,\n\t});\n}\n"]}