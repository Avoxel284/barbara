{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,uCAA4E;AAuBnE,2FAvBA,oBAAU,OAuBA;AAAiB,wFAvBA,iBAAO,OAuBA;AAtB3C,sDAAqE;AAsBxB,2FAtBpC,uBAAU,OAsBoC;AAAE,iGAtBpC,6BAAgB,OAsBoC;AAblE,KAAK,UAAU,MAAM,CAAC,KAAa,EAAE,OAAsB;IACjE,IAAI,OAAO,CAAC,OAAO,KAAK,iBAAO,CAAC,UAAU,EAAE;QAC3C,OAAO,MAAM,IAAA,6BAAgB,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;KAClE;AAEF,CAAC;AALD,wBAKC;AAMM,KAAK,UAAU,IAAI,CAAC,GAAW,EAAE,OAAoB,IAAG,CAAC;AAAhE,oBAAgE","sourcesContent":["import { MusicTrack, SearchOptions, Service, InfoOptions } from \"./classes\";\nimport { SoundCloud, SoundCloudSearch } from \"./services/SoundCloud\";\n\n/**\n * Searches given keywords on YouTube, unless other service is specified in search options.\n *\n * @param query Search query\n * @param options Search options\n * @returns Array of MusicTrack objects\n */\nexport async function search(query: string, options: SearchOptions) {\n\tif (options.service === Service.soundcloud) {\n\t\treturn await SoundCloudSearch(query, options.limit, options.type);\n\t}\n\t// return query;\n}\n\n/**\n * Automatically matches URL and returns information about the music track\n * @returns MusicTrack object\n */\nexport async function info(url: string, options: InfoOptions) {}\n\nexport { MusicTrack, SearchOptions, Service, SoundCloud, SoundCloudSearch };\n"]}