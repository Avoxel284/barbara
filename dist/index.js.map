{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,uCAA4E;AAwBnE,2FAxBA,oBAAU,OAwBA;AAAiB,wFAxBA,iBAAO,OAwBA;AAvB3C,sDAAqE;AAwB5D,2FAxBA,uBAAU,OAwBA;AAAE,iGAxBA,6BAAgB,OAwBA;AAtBrC,qCAA4C;AAuBnC,uFAvBA,eAAM,OAuBA;AAAE,yFAvBA,iBAAQ,OAuBA;AAdlB,KAAK,UAAU,MAAM,CAAC,KAAa,EAAE,OAAsB;IACjE,IAAI,OAAO,CAAC,OAAO,KAAK,iBAAO,CAAC,UAAU,EAAE;QAC3C,OAAO,MAAM,IAAA,6BAAgB,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;KAClE;AACF,CAAC;AAJD,wBAIC;AAMM,KAAK,UAAU,IAAI,CAAC,GAAW,EAAE,OAAoB,IAAG,CAAC;AAAhE,oBAAgE","sourcesContent":["import { MusicTrack, SearchOptions, Service, InfoOptions } from \"./classes\";\r\nimport { SoundCloud, SoundCloudSearch } from \"./services/SoundCloud\";\r\nimport { YouTubeSearch, YouTube } from \"./services/YouTube\";\r\nimport { setKey, freeKeys } from \"./config\";\r\n\r\n/**\r\n * Searches given keywords on YouTube, unless other service is specified in search options.\r\n *\r\n * @param query Search query\r\n * @param options Search options\r\n * @returns Array of MusicTrack objects\r\n */\r\nexport async function search(query: string, options: SearchOptions) {\r\n\tif (options.service === Service.soundcloud) {\r\n\t\treturn await SoundCloudSearch(query, options.limit, options.type);\r\n\t}\r\n}\r\n\r\n/**\r\n * Automatically matches URL and returns information about the music track\r\n * @returns MusicTrack object\r\n */\r\nexport async function info(url: string, options: InfoOptions) {}\r\n\r\nexport { MusicTrack, SearchOptions, Service };\r\nexport { SoundCloud, SoundCloudSearch };\r\nexport { setKey, freeKeys };\r\n// export { YouTube, YouTubeSearch };\r\n"]}