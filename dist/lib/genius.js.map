{"version":3,"file":"genius.js","sourceRoot":"","sources":["../../src/lib/genius.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Avoxel284 2022\n * Barbara Music Module\n */\n\nimport axios from \"axios\";\nimport { GeniusSong } from \".\";\nimport { getKey } from \"./config\";\nimport { debugLog } from \"./util\";\n\n/**\n * Cache for lyrics to make fetching lyrics faster\n */\nconst LYRICS_CACHE: any = {};\n\n/**\n * Returns with song data from Genius API\n *\n * @param query Query to search song\n */\nexport async function searchGeniusSong(query: string): Promise<GeniusSong | undefined> {\n\tif (!getKey(\"GENIUS_TOKEN\")) throw \"Genius is not authenticated! (Token is null)\";\n\n\tconst { data } = await axios\n\t\t.get(`https://api.genius.com/search?q=${query}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${getKey(\"GENIUS_TOKEN\")}`,\n\t\t\t\tAccept: \"application/json\",\n\t\t\t},\n\t\t})\n\t\t.catch((err) => {\n\t\t\tthrow err;\n\t\t});\n\n\tdebugLog(`Searching for song on Genius :: query: ${query}`);\n\tdebugLog(`Genius \"hits\":`, data?.response?.hits);\n\n\tlet song = data?.response?.hits[0];\n\tif (song?.type != \"song\") return;\n\tsong = song.result;\n\n\treturn {\n\t\tlyrics: undefined,\n\t\turl: song.url,\n\t\tpyongs: song.pyongs_count,\n\t\ttitle: song.full_title,\n\t\tname: song.name,\n\t\tartist: {\n\t\t\tname: song.primary_artist.name,\n\t\t\turl: song.primary_artist.url,\n\t\t\tavatar: song.primary_artist.image_url,\n\t\t\tid: song.primary_artist.id,\n\t\t\tverified: song.primary_artist.is_verified,\n\t\t},\n\t\tthumbnail: song.song_art_image_url,\n\t\tid: song.id,\n\t\tlyricsState: song.lyrics_state,\n\t};\n}\n\n/**\n * Scrape lyrics data from song on Genius\n *\n * @param url Genius song friendly URL\n */\nexport async function fetchGeniusSongLyrics(url: string): Promise<string[] | null> {\n\tdebugLog(`Genius Extract Song Lyrics URL: ${url}`);\n\tif (!url) return null;\n\tif (getKey(\"GENIUS_LYRICSCACHING\") === true && LYRICS_CACHE[url]) return LYRICS_CACHE[url];\n\n\tlet { data } = await axios.get(url).catch((err) => {\n\t\tthrow err;\n\t});\n\n\tlet json = data.split(\"window.__PRELOADED_STATE__ = JSON.parse('\")[1].split(\"');\")[0];\n\n\tif (!json) return null;\n\n\ttry {\n\t\tjson = JSON.parse(json.replace(/\\\\/g, \"\"));\n\t} catch (err) {\n\t\tdebugLog(json);\n\t\tdebugLog(err);\n\t\tjson = null;\n\t}\n\tdebugLog(json);\n\tif (!json) return null;\n\n\tlet lyrics = json?.songPage?.lyricsData?.body?.children?.[0]?.children.filter((l: any) => {\n\t\treturn typeof l == \"string\";\n\t});\n\tif (getKey(\"GENIUS_LYRICSCACHING\") === true) LYRICS_CACHE[url] = lyrics;\n\n\treturn lyrics;\n}\n"]}