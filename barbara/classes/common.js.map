{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/classes/common.ts"],"names":[],"mappings":";;;AAAA,IAAY,OAKX;AALD,WAAY,OAAO;IAClB,2CAAO,CAAA;IACP,2CAAO,CAAA;IACP,iDAAU,CAAA;IACV,+CAAS,CAAA;AACV,CAAC,EALW,OAAO,GAAP,eAAO,KAAP,eAAO,QAKlB;AAED,IAAK,YAIJ;AAJD,WAAK,YAAY;IAChB,6CAAG,CAAA;IACH,mDAAM,CAAA;IACN,+CAAI,CAAA;AACL,CAAC,EAJI,YAAY,KAAZ,YAAY,QAIhB;AAYD,MAAa,UAAU;IA6BtB,YAAY,OAAY,EAAE;QAEzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAGpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAGtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAG9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAG9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAGlC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;CACD;AAhDD,gCAgDC;AAED,MAAa,aAAa;IAazB,YAAY,GAAW,EAAE,MAAyB,EAAE,IAAY,EAAE,OAAgB;QACjF,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;CACD;AAnBD,sCAmBC","sourcesContent":["export enum Service {\r\n\tspotify,\r\n\tyoutube,\r\n\tsoundcloud,\r\n\taudiofile,\r\n}\r\n\r\nenum AudioQuality {\r\n\tlow,\r\n\tmedium,\r\n\thigh,\r\n}\r\n\r\ninterface Audio {\r\n\turl: string;\r\n\tquality: AudioQuality;\r\n}\r\n\r\ninterface Thumbnail {\r\n\t/** Thumbnail URL */\r\n\turl: string;\r\n}\r\n\r\nexport class MusicTrack {\r\n\t/** URL of the track (e.g. https://youtube.com/watch?v=videoid) */\r\n\turl?: string;\r\n\r\n\t/** Name of the track */\r\n\tname?: string;\r\n\r\n\t/** Name of the track */\r\n\tqueuedBy?: string;\r\n\r\n\t/** Duration of the track */\r\n\tduration?: number;\r\n\r\n\t/** Has the track been playlisted? */\r\n\tplaylisted?: boolean;\r\n\r\n\t/** Service providing music */\r\n\tservice?: Service;\r\n\r\n\t/** Thumbnail of the track */\r\n\tthumbnail?: Thumbnail;\r\n\r\n\taudio?: Array<any>;\r\n\r\n\t/**\r\n\t * An object that represents a music track\r\n\t *\r\n\t * @param {Object} data Internal data parameter, will come back to this later\r\n\t */\r\n\tconstructor(data: any = {}) {\r\n\t\t/** Friendly URL of the track - e.g. a YouTube video page or SoundCloud track page */\r\n\t\tthis.url = data.url;\r\n\r\n\t\t/** Name of track */\r\n\t\tthis.name = data.name;\r\n\r\n\t\t/** The ID of the user that played/queued the track (completely optional but can be nice to have) */\r\n\t\tthis.queuedBy = data.queuedBy;\r\n\r\n\t\t/** Duration of track in seconds */\r\n\t\tthis.duration = data.duration;\r\n\r\n\t\t/** Is this track part of a playlist? */\r\n\t\tthis.playlisted = data.playlisted;\r\n\r\n\t\t/** Service providing the track */\r\n\t\tthis.service = data.service;\r\n\t}\r\n}\r\n\r\nexport class MusicPlaylist {\r\n\t/** Public URL of playlist */\r\n\turl: string;\r\n\r\n\t/** Name of playlist */\r\n\tname: string;\r\n\r\n\t/** Is the playlist an album? */\r\n\tisAlbum: boolean;\r\n\r\n\t/** Array of MusicTracks in playlist */\r\n\ttracks: Array<MusicTrack>;\r\n\r\n\tconstructor(url: string, tracks: Array<MusicTrack>, name: string, isAlbum: boolean) {\r\n\t\tthis.url = url;\r\n\t\tthis.name = name;\r\n\t\tthis.isAlbum = isAlbum;\r\n\t\tthis.tracks = tracks;\r\n\t}\r\n}\r\n\r\nexport interface SearchOptions {\r\n\t/** Service to search track on */\r\n\tservice: Service;\r\n}\r\n\r\nexport interface InfoOptions {\r\n\t/** Amount of results to return */\r\n\tlength: number;\r\n}\r\n"]}