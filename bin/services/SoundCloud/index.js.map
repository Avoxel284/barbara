{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/services/SoundCloud/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { BarbaraType, MusicPlaylist, MusicTrack, Service } from \"../../classes\";\r\nconst axios = require(\"axios\").default;\r\n\r\nlet clientId = \"\";\r\n\r\n/** URL pattern for SoundCloud - ripped from play-dl */\r\nconst SOUNDCLOUD_URL_PATTERN =\r\n\t/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?(api\\.soundcloud\\.com|soundcloud\\.com|snd\\.sc)\\/(.*)$/;\r\n\r\n/**\r\n * Returns a free client ID - ripped from play-dl\r\n */\r\nexport async function getClientId(): Promise<string> {\r\n\tconst { data } = await axios.get(\"https://soundcloud.com/\").catch((err: Error) => {\r\n\t\tthrow err;\r\n\t});\r\n\tconst urls: string[] = [];\r\n\tdata.split('<script crossorigin src=\"').forEach((r: string) => {\r\n\t\tif (r.startsWith(\"https\")) urls.push(r.split('\"')[0]);\r\n\t});\r\n\tconst { data: data2 } = await axios.get(urls[urls.length - 1]).catch((err: Error) => {\r\n\t\tthrow err;\r\n\t});\r\n\treturn data2.split(',client_id:\"')[1].split('\"')[0];\r\n}\r\n\r\n/**\r\n * Returns MusicTrack or MusicPlaylist with information from SoundCloud\r\n */\r\nexport async function SoundCloud(url: string): Promise<BarbaraType> {\r\n\tclientId = await getClientId();\r\n\tconsole.log(clientId);\r\n\r\n\turl = url.trim();\r\n\tif (!url.match(SOUNDCLOUD_URL_PATTERN))\r\n\t\tthrow new Error(`Given URL is not a valid SoundCloud URL`);\r\n\tconst { data } = await axios\r\n\t\t.get(`https://api-v2.soundcloud.com/resolve?url=${url}&client_id=${clientId}`)\r\n\t\t.catch((err: Error) => {\r\n\t\t\tthrow err;\r\n\t\t});\r\n\r\n\tif (data.kind == \"track\") {\r\n\t\treturn new MusicTrack({\r\n\t\t\tname: data.title,\r\n\t\t\turl: data.permalink_url,\r\n\t\t\tduration: Number(data.duration) / 1000,\r\n\t\t\tauthor: {\r\n\t\t\t\turl: data.user.permalink_url,\r\n\t\t\t\tname: data.user.username,\r\n\t\t\t\tavatar: data.user.avatar_url,\r\n\t\t\t\tid: data.user.id,\r\n\t\t\t},\r\n\t\t\tthumbnail: { url: data.artwork_url },\r\n\t\t\tservice: Service.soundcloud,\r\n\t\t});\r\n\t} else if (data.kind == \"playlist\") {\r\n\t\treturn new MusicPlaylist({\r\n\t\t\tname: data.title,\r\n\t\t\turl: data.permalink_url,\r\n\t\t\tduration: Number(data.duration) / 1000,\r\n\t\t\tauthor: {\r\n\t\t\t\turl: data.user.permalink_url,\r\n\t\t\t\tname: data.user.username,\r\n\t\t\t\tavatar: data.user.avatar_url,\r\n\t\t\t\tid: data.user.id,\r\n\t\t\t},\r\n\t\t\tthumbnail: { url: data.artwork_url },\r\n\t\t\tservice: Service.soundcloud,\r\n\t\t});\r\n\t} else {\r\n\t\tthrow new Error(\"SoundCloud returned unknown resource\");\r\n\t}\r\n}\r\n"]}